/* Generated By:JJTree&JavaCC: Do not edit this line. OrientSqlTokenManager.java */
package com.orientechnologies.orient.core.sql.parser;

import java.io.InputStream;
import java.util.List;
import java.util.ArrayList;
import com.orientechnologies.orient.core.sql.OCommandSQLParsingException;
import com.orientechnologies.orient.core.exception.OQueryParsingException;

/** Token Manager. */
public class OrientSqlTokenManager implements OrientSqlConstants {

	/** Debug output. */
	public java.io.PrintStream debugStream = System.out;

	/** Set debug output. */
	public void setDebugStream(java.io.PrintStream ds) {

		debugStream = ds;
	}

	private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2) {

		switch(pos) {
			case 0:
				if((active1 & 0x400000L) != 0L) {
					jjmatchedKind = 152;
					return 97;
				}
				if((active1 & 0x100000000L) != 0L || (active2 & 0x300L) != 0L)
					return 6;
				if((active1 & 0x800000000L) != 0L)
					return 45;
				if((active1 & 0x200000000L) != 0L)
					return 537;
				if((active1 & 0x800000L) != 0L) {
					jjmatchedKind = 152;
					return 375;
				}
				if((active1 & 0x4028000000000000L) != 0L)
					return 21;
				if((active1 & 0x400000000L) != 0L)
					return 42;
				return -1;
			case 1:
				if((active1 & 0x800000L) != 0L) {
					if(jjmatchedPos != 1) {
						jjmatchedKind = 152;
						jjmatchedPos = 1;
					}
					return 43;
				}
				if((active1 & 0x400000L) != 0L) {
					if(jjmatchedPos != 1) {
						jjmatchedKind = 152;
						jjmatchedPos = 1;
					}
					return 98;
				}
				return -1;
			case 2:
				if((active1 & 0xc00000L) != 0L) {
					jjmatchedKind = 152;
					jjmatchedPos = 2;
					return 43;
				}
				return -1;
			case 3:
				if((active1 & 0x800000L) != 0L) {
					jjmatchedKind = 152;
					jjmatchedPos = 3;
					return 43;
				}
				if((active1 & 0x400000L) != 0L)
					return 43;
				return -1;
			default:
				return -1;
		}
	}

	private final int jjStartNfa_0(int pos, long active0, long active1, long active2) {

		return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2), pos + 1);
	}

	private int jjStopAtPos(int pos, int kind) {

		jjmatchedKind = kind;
		jjmatchedPos = pos;
		return pos + 1;
	}

	private int jjMoveStringLiteralDfa0_0() {

		switch(curChar) {
			case 33:
				jjmatchedKind = 104;
				return jjMoveStringLiteralDfa1_0(0x400000000000L, 0x0L);
			case 35:
				return jjStopAtPos(0, 162);
			case 36:
				return jjStartNfaWithStates_0(0, 98, 42);
			case 37:
				jjmatchedKind = 123;
				return jjMoveStringLiteralDfa1_0(0x0L, 0x10L);
			case 38:
				jjmatchedKind = 120;
				return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x2L);
			case 40:
				return jjStopAtPos(0, 88);
			case 41:
				return jjStopAtPos(0, 89);
			case 42:
				jjmatchedKind = 118;
				return jjMoveStringLiteralDfa1_0(0x8000000000000000L, 0x0L);
			case 43:
				jjmatchedKind = 116;
				return jjMoveStringLiteralDfa1_0(0x2004000000000000L, 0x0L);
			case 44:
				return jjStopAtPos(0, 95);
			case 45:
				jjmatchedKind = 117;
				return jjMoveStringLiteralDfa1_0(0x4008000000000000L, 0x0L);
			case 46:
				jjmatchedKind = 96;
				return jjMoveStringLiteralDfa1_0(0x0L, 0x300L);
			case 47:
				jjmatchedKind = 119;
				return jjMoveStringLiteralDfa1_0(0x0L, 0x1L);
			case 58:
				return jjStopAtPos(0, 107);
			case 59:
				return jjStopAtPos(0, 94);
			case 60:
				jjmatchedKind = 102;
				return jjMoveStringLiteralDfa1_0(0x1000900000000000L, 0x20L);
			case 61:
				jjmatchedKind = 100;
				return jjMoveStringLiteralDfa1_0(0x2000000000L, 0x0L);
			case 62:
				jjmatchedKind = 103;
				return jjMoveStringLiteralDfa1_0(0x200000000000L, 0xc0L);
			case 63:
				return jjStopAtPos(0, 106);
			case 64:
				return jjStartNfaWithStates_0(0, 97, 537);
			case 91:
				return jjStopAtPos(0, 92);
			case 93:
				return jjStopAtPos(0, 93);
			case 94:
				jjmatchedKind = 122;
				return jjMoveStringLiteralDfa1_0(0x0L, 0x8L);
			case 96:
				return jjStartNfaWithStates_0(0, 99, 45);
			case 102:
				return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
			case 116:
				return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L);
			case 123:
				return jjStopAtPos(0, 90);
			case 124:
				jjmatchedKind = 121;
				return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x4L);
			case 125:
				return jjStopAtPos(0, 91);
			case 126:
				return jjStopAtPos(0, 105);
			default:
				return jjMoveNfa_0(0, 0);
		}
	}

	private int jjMoveStringLiteralDfa1_0(long active1, long active2) {

		try {
			curChar = input_stream.readChar();
		} catch(java.io.IOException e) {
			jjStopStringLiteralDfa_0(0, 0L, active1, active2);
			return 1;
		}
		switch(curChar) {
			case 38:
				if((active1 & 0x2000000000000L) != 0L)
					return jjStopAtPos(1, 113);
				break;
			case 43:
				if((active1 & 0x4000000000000L) != 0L)
					return jjStopAtPos(1, 114);
				break;
			case 45:
				if((active1 & 0x8000000000000L) != 0L)
					return jjStopAtPos(1, 115);
				break;
			case 46:
				if((active2 & 0x200L) != 0L) {
					jjmatchedKind = 137;
					jjmatchedPos = 1;
				}
				return jjMoveStringLiteralDfa2_0(active1, 0L, active2, 0x100L);
			case 60:
				if((active1 & 0x1000000000000000L) != 0L) {
					jjmatchedKind = 124;
					jjmatchedPos = 1;
				}
				return jjMoveStringLiteralDfa2_0(active1, 0L, active2, 0x20L);
			case 61:
				if((active1 & 0x2000000000L) != 0L)
					return jjStopAtPos(1, 101);
				else if((active1 & 0x100000000000L) != 0L)
					return jjStopAtPos(1, 108);
				else if((active1 & 0x200000000000L) != 0L)
					return jjStopAtPos(1, 109);
				else if((active1 & 0x400000000000L) != 0L)
					return jjStopAtPos(1, 110);
				else if((active1 & 0x2000000000000000L) != 0L)
					return jjStopAtPos(1, 125);
				else if((active1 & 0x4000000000000000L) != 0L)
					return jjStopAtPos(1, 126);
				else if((active1 & 0x8000000000000000L) != 0L)
					return jjStopAtPos(1, 127);
				else if((active2 & 0x1L) != 0L)
					return jjStopAtPos(1, 128);
				else if((active2 & 0x2L) != 0L)
					return jjStopAtPos(1, 129);
				else if((active2 & 0x4L) != 0L)
					return jjStopAtPos(1, 130);
				else if((active2 & 0x8L) != 0L)
					return jjStopAtPos(1, 131);
				else if((active2 & 0x10L) != 0L)
					return jjStopAtPos(1, 132);
				break;
			case 62:
				if((active1 & 0x800000000000L) != 0L)
					return jjStopAtPos(1, 111);
				return jjMoveStringLiteralDfa2_0(active1, 0L, active2, 0xc0L);
			case 97:
				return jjMoveStringLiteralDfa2_0(active1, 0x800000L, active2, 0L);
			case 114:
				return jjMoveStringLiteralDfa2_0(active1, 0x400000L, active2, 0L);
			case 124:
				if((active1 & 0x1000000000000L) != 0L)
					return jjStopAtPos(1, 112);
				break;
			default:
				break;
		}
		return jjStartNfa_0(0, 0L, active1, active2);
	}

	private int jjMoveStringLiteralDfa2_0(long old1, long active1, long old2, long active2) {

		if(((active1 &= old1) | (active2 &= old2)) == 0L)
			return jjStartNfa_0(0, 0L, old1, old2);
		try {
			curChar = input_stream.readChar();
		} catch(java.io.IOException e) {
			jjStopStringLiteralDfa_0(1, 0L, active1, active2);
			return 2;
		}
		switch(curChar) {
			case 46:
				if((active2 & 0x100L) != 0L)
					return jjStopAtPos(2, 136);
				break;
			case 61:
				if((active2 & 0x20L) != 0L)
					return jjStopAtPos(2, 133);
				else if((active2 & 0x40L) != 0L)
					return jjStopAtPos(2, 134);
				break;
			case 62:
				return jjMoveStringLiteralDfa3_0(active1, 0L, active2, 0x80L);
			case 108:
				return jjMoveStringLiteralDfa3_0(active1, 0x800000L, active2, 0L);
			case 117:
				return jjMoveStringLiteralDfa3_0(active1, 0x400000L, active2, 0L);
			default:
				break;
		}
		return jjStartNfa_0(1, 0L, active1, active2);
	}

	private int jjMoveStringLiteralDfa3_0(long old1, long active1, long old2, long active2) {

		if(((active1 &= old1) | (active2 &= old2)) == 0L)
			return jjStartNfa_0(1, 0L, old1, old2);
		try {
			curChar = input_stream.readChar();
		} catch(java.io.IOException e) {
			jjStopStringLiteralDfa_0(2, 0L, active1, active2);
			return 3;
		}
		switch(curChar) {
			case 61:
				if((active2 & 0x80L) != 0L)
					return jjStopAtPos(3, 135);
				break;
			case 101:
				if((active1 & 0x400000L) != 0L)
					return jjStartNfaWithStates_0(3, 86, 43);
				break;
			case 115:
				return jjMoveStringLiteralDfa4_0(active1, 0x800000L, active2, 0L);
			default:
				break;
		}
		return jjStartNfa_0(2, 0L, active1, active2);
	}

	private int jjMoveStringLiteralDfa4_0(long old1, long active1, long old2, long active2) {

		if(((active1 &= old1) | (active2 &= old2)) == 0L)
			return jjStartNfa_0(2, 0L, old1, old2);
		try {
			curChar = input_stream.readChar();
		} catch(java.io.IOException e) {
			jjStopStringLiteralDfa_0(3, 0L, active1, 0L);
			return 4;
		}
		switch(curChar) {
			case 101:
				if((active1 & 0x800000L) != 0L)
					return jjStartNfaWithStates_0(4, 87, 43);
				break;
			default:
				break;
		}
		return jjStartNfa_0(3, 0L, active1, 0L);
	}

	private int jjStartNfaWithStates_0(int pos, int kind, int state) {

		jjmatchedKind = kind;
		jjmatchedPos = pos;
		try {
			curChar = input_stream.readChar();
		} catch(java.io.IOException e) {
			return pos + 1;
		}
		return jjMoveNfa_0(state, pos + 1);
	}

	static final long[] jjbitVec0 = {0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL};
	static final long[] jjbitVec2 = {0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL};

	private int jjMoveNfa_0(int startState, int curPos) {

		int startsAt = 0;
		jjnewStateCnt = 619;
		int i = 1;
		jjstateSet[0] = startState;
		int kind = 0x7fffffff;
		for(;;) {
			if(++jjround == 0x7fffffff)
				ReInitRounds();
			if(curChar < 64) {
				long l = 1L << curChar;
				do {
					switch(jjstateSet[--i]) {
						case 375:
						case 43:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 152)
								kind = 152;
							jjCheckNAdd(43);
							break;
						case 97:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 152)
								kind = 152;
							jjCheckNAdd(43);
							break;
						case 0:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddStates(0, 6);
							else if(curChar == 39)
								jjCheckNAddStates(7, 11);
							else if(curChar == 36)
								jjstateSet[jjnewStateCnt++] = 42;
							else if(curChar == 45)
								jjAddStates(12, 13);
							else if(curChar == 34)
								jjCheckNAddStates(14, 16);
							else if(curChar == 46)
								jjCheckNAdd(6);
							if((0x3fe000000000000L & l) != 0L) {
								if(kind > 74)
									kind = 74;
								jjCheckNAddStates(17, 21);
							} else if(curChar == 48) {
								if(kind > 74)
									kind = 74;
								jjCheckNAddStates(22, 30);
							}
							break;
						case 21:
							if((0x3fe000000000000L & l) != 0L)
								jjCheckNAddStates(31, 33);
							else if(curChar == 48)
								jjCheckNAddStates(34, 37);
							break;
						case 98:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 152)
								kind = 152;
							jjCheckNAdd(43);
							break;
						case 5:
							if(curChar == 46)
								jjCheckNAdd(6);
							break;
						case 6:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 78)
								kind = 78;
							jjCheckNAddStates(38, 40);
							break;
						case 8:
							if((0x280000000000L & l) != 0L)
								jjCheckNAdd(9);
							break;
						case 9:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 78)
								kind = 78;
							jjCheckNAddTwoStates(9, 10);
							break;
						case 11:
							if(curChar == 34)
								jjCheckNAddStates(14, 16);
							break;
						case 12:
							if((0xfffffffbffffdbffL & l) != 0L)
								jjCheckNAddStates(14, 16);
							break;
						case 14:
							if((0x8400000000L & l) != 0L)
								jjCheckNAddStates(14, 16);
							break;
						case 15:
							if(curChar == 34 && kind > 84)
								kind = 84;
							break;
						case 16:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAddStates(41, 44);
							break;
						case 17:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAddStates(14, 16);
							break;
						case 18:
							if((0xf000000000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 19;
							break;
						case 19:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAdd(17);
							break;
						case 20:
							if(curChar == 45)
								jjAddStates(12, 13);
							break;
						case 22:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddStates(31, 33);
							break;
						case 24:
							if(curChar == 46)
								jjCheckNAddStates(45, 47);
							break;
						case 25:
							if(curChar == 45)
								jjCheckNAddTwoStates(26, 29);
							break;
						case 26:
							if((0x3fe000000000000L & l) == 0L)
								break;
							if(kind > 85)
								kind = 85;
							jjCheckNAddTwoStates(27, 28);
							break;
						case 27:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 85)
								kind = 85;
							jjCheckNAddTwoStates(27, 28);
							break;
						case 29:
							if(curChar != 48)
								break;
							if(kind > 85)
								kind = 85;
							jjCheckNAddStates(48, 50);
							break;
						case 31:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 85)
								kind = 85;
							jjCheckNAddTwoStates(31, 28);
							break;
						case 32:
							if((0xff000000000000L & l) == 0L)
								break;
							if(kind > 85)
								kind = 85;
							jjCheckNAddTwoStates(32, 28);
							break;
						case 33:
							if(curChar == 46)
								jjstateSet[jjnewStateCnt++] = 24;
							break;
						case 34:
							if(curChar == 48)
								jjCheckNAddStates(34, 37);
							break;
						case 36:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddStates(51, 53);
							break;
						case 37:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAddStates(54, 56);
							break;
						case 41:
							if(curChar == 36)
								jjstateSet[jjnewStateCnt++] = 42;
							break;
						case 45:
							jjAddStates(57, 58);
							break;
						case 47:
							if(curChar == 58)
								jjCheckNAddTwoStates(48, 49);
							break;
						case 48:
							if(curChar == 36)
								jjCheckNAdd(49);
							break;
						case 50:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 159)
								kind = 159;
							jjstateSet[jjnewStateCnt++] = 50;
							break;
						case 63:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddStates(0, 6);
							break;
						case 64:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddStates(59, 61);
							break;
						case 66:
							if((0x280000000000L & l) != 0L)
								jjCheckNAdd(67);
							break;
						case 67:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddTwoStates(67, 10);
							break;
						case 68:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddTwoStates(68, 69);
							break;
						case 70:
							if((0x280000000000L & l) != 0L)
								jjCheckNAdd(71);
							break;
						case 71:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 78)
								kind = 78;
							jjCheckNAddTwoStates(71, 10);
							break;
						case 72:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddTwoStates(72, 73);
							break;
						case 73:
							if(curChar != 46)
								break;
							if(kind > 78)
								kind = 78;
							jjCheckNAddStates(62, 64);
							break;
						case 74:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 78)
								kind = 78;
							jjCheckNAddStates(62, 64);
							break;
						case 76:
							if((0x280000000000L & l) != 0L)
								jjCheckNAdd(77);
							break;
						case 77:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 78)
								kind = 78;
							jjCheckNAddTwoStates(77, 10);
							break;
						case 142:
							if(curChar == 58)
								jjCheckNAddStates(65, 67);
							break;
						case 144:
							if(curChar == 36)
								jjCheckNAdd(145);
							break;
						case 146:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 154)
								kind = 154;
							jjCheckNAddTwoStates(146, 147);
							break;
						case 147:
							if((0x600000000000L & l) != 0L)
								jjCheckNAddTwoStates(148, 149);
							break;
						case 148:
							if(curChar == 36)
								jjCheckNAdd(149);
							break;
						case 150:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 154)
								kind = 154;
							jjCheckNAddTwoStates(147, 150);
							break;
						case 176:
							if(curChar == 58)
								jjCheckNAddTwoStates(177, 178);
							break;
						case 177:
							if(curChar == 36)
								jjCheckNAdd(178);
							break;
						case 179:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 155)
								kind = 155;
							jjCheckNAddTwoStates(179, 180);
							break;
						case 180:
							if((0x600000000000L & l) != 0L)
								jjCheckNAddTwoStates(181, 182);
							break;
						case 181:
							if(curChar == 36)
								jjCheckNAdd(182);
							break;
						case 183:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 155)
								kind = 155;
							jjCheckNAddTwoStates(180, 183);
							break;
						case 197:
							if(curChar == 58)
								jjCheckNAddTwoStates(198, 199);
							break;
						case 198:
							if(curChar == 36)
								jjCheckNAdd(199);
							break;
						case 200:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 156)
								kind = 156;
							jjCheckNAddTwoStates(200, 201);
							break;
						case 201:
							if((0x600000000000L & l) != 0L)
								jjCheckNAddTwoStates(202, 203);
							break;
						case 202:
							if(curChar == 36)
								jjCheckNAdd(203);
							break;
						case 204:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 156)
								kind = 156;
							jjCheckNAddTwoStates(201, 204);
							break;
						case 219:
							if(curChar == 58)
								jjCheckNAddTwoStates(220, 221);
							break;
						case 220:
							if(curChar == 36)
								jjCheckNAdd(221);
							break;
						case 222:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 157)
								kind = 157;
							jjCheckNAddTwoStates(222, 223);
							break;
						case 223:
							if((0x600000000000L & l) != 0L)
								jjCheckNAddTwoStates(224, 225);
							break;
						case 224:
							if(curChar == 36)
								jjCheckNAdd(225);
							break;
						case 226:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 157)
								kind = 157;
							jjCheckNAddTwoStates(223, 226);
							break;
						case 301:
							if(curChar == 58)
								jjCheckNAddTwoStates(302, 303);
							break;
						case 302:
							if(curChar == 36)
								jjCheckNAdd(303);
							break;
						case 304:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 158)
								kind = 158;
							jjstateSet[jjnewStateCnt++] = 304;
							break;
						case 582:
							if((0x3fe000000000000L & l) == 0L)
								break;
							if(kind > 74)
								kind = 74;
							jjCheckNAddStates(17, 21);
							break;
						case 583:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 74)
								kind = 74;
							jjCheckNAddTwoStates(583, 584);
							break;
						case 585:
							if(curChar == 39)
								jjCheckNAddStates(7, 11);
							break;
						case 586:
							if((0xffffff7fffffdbffL & l) != 0L)
								jjCheckNAdd(587);
							break;
						case 587:
							if(curChar == 39 && kind > 83)
								kind = 83;
							break;
						case 589:
							if((0x8400000000L & l) != 0L)
								jjCheckNAdd(587);
							break;
						case 590:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAddTwoStates(591, 587);
							break;
						case 591:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAdd(587);
							break;
						case 592:
							if((0xf000000000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 593;
							break;
						case 593:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAdd(591);
							break;
						case 594:
							if((0xffffff7fffffdbffL & l) != 0L)
								jjCheckNAddStates(68, 70);
							break;
						case 596:
							if((0x8400000000L & l) != 0L)
								jjCheckNAddStates(68, 70);
							break;
						case 597:
							if(curChar == 39 && kind > 84)
								kind = 84;
							break;
						case 598:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAddStates(71, 74);
							break;
						case 599:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAddStates(68, 70);
							break;
						case 600:
							if((0xf000000000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 601;
							break;
						case 601:
							if((0xff000000000000L & l) != 0L)
								jjCheckNAdd(599);
							break;
						case 602:
							if(curChar != 48)
								break;
							if(kind > 74)
								kind = 74;
							jjCheckNAddStates(22, 30);
							break;
						case 604:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 74)
								kind = 74;
							jjCheckNAddTwoStates(604, 584);
							break;
						case 605:
							if((0xff000000000000L & l) == 0L)
								break;
							if(kind > 74)
								kind = 74;
							jjCheckNAddTwoStates(605, 584);
							break;
						case 607:
							if((0x3ff000000000000L & l) != 0L)
								jjAddStates(75, 76);
							break;
						case 608:
							if(curChar == 46)
								jjCheckNAdd(609);
							break;
						case 609:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddTwoStates(609, 610);
							break;
						case 611:
							if((0x280000000000L & l) != 0L)
								jjCheckNAdd(612);
							break;
						case 612:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 78)
								kind = 78;
							jjCheckNAddTwoStates(612, 10);
							break;
						case 614:
							if((0x3ff000000000000L & l) != 0L)
								jjCheckNAddStates(77, 79);
							break;
						case 615:
							if(curChar == 46)
								jjCheckNAdd(616);
							break;
						case 617:
							if((0x280000000000L & l) != 0L)
								jjCheckNAdd(618);
							break;
						case 618:
							if((0x3ff000000000000L & l) == 0L)
								break;
							if(kind > 78)
								kind = 78;
							jjCheckNAddTwoStates(618, 10);
							break;
						default:
							break;
					}
				} while(i != startsAt);
			} else if(curChar < 128) {
				long l = 1L << (curChar & 077);
				do {
					switch(jjstateSet[--i]) {
						case 375:
							if((0x7fffffe87fffffeL & l) != 0L) {
								if(kind > 152)
									kind = 152;
								jjCheckNAdd(43);
							}
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 379;
							else if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 376;
							break;
						case 97:
							if((0x7fffffe87fffffeL & l) != 0L) {
								if(kind > 152)
									kind = 152;
								jjCheckNAdd(43);
							}
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 106;
							else if((0x800000008000L & l) != 0L) {
								if(kind > 15)
									kind = 15;
							} else if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 98;
							break;
						case 0:
							if((0x7fffffe87fffffeL & l) != 0L) {
								if(kind > 152)
									kind = 152;
								jjCheckNAdd(43);
							} else if(curChar == 64)
								jjAddStates(80, 89);
							else if(curChar == 96)
								jjCheckNAdd(45);
							if((0x100000001000L & l) != 0L)
								jjAddStates(90, 94);
							else if((0x400000004L & l) != 0L)
								jjAddStates(95, 99);
							else if((0x400000004000L & l) != 0L)
								jjAddStates(100, 103);
							else if((0x800000008000L & l) != 0L)
								jjAddStates(104, 106);
							else if((0x4000000040000L & l) != 0L)
								jjAddStates(107, 110);
							else if((0x200000002000L & l) != 0L)
								jjAddStates(111, 113);
							else if((0x1000000010000L & l) != 0L)
								jjAddStates(114, 115);
							else if((0x200000002L & l) != 0L)
								jjAddStates(116, 120);
							else if((0x80000000800000L & l) != 0L)
								jjAddStates(121, 124);
							else if((0x4000000040L & l) != 0L)
								jjAddStates(125, 126);
							else if((0x20000000200000L & l) != 0L)
								jjAddStates(127, 130);
							else if((0x2000000020L & l) != 0L)
								jjAddStates(131, 132);
							else if((0x40000000400000L & l) != 0L)
								jjAddStates(133, 134);
							else if((0x1000000010L & l) != 0L)
								jjAddStates(135, 138);
							else if((0x800000008L & l) != 0L)
								jjAddStates(139, 147);
							else if((0x20000000200L & l) != 0L)
								jjAddStates(148, 156);
							else if((0x10000000100000L & l) != 0L)
								jjAddStates(157, 159);
							else if((0x8000000080000L & l) != 0L)
								jjAddStates(160, 163);
							else if((0x80000000800L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 39;
							else if((0x8000000080L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 1;
							if(curChar == 73)
								jjCheckNAddTwoStates(61, 60);
							else if(curChar == 105)
								jjCheckNAddTwoStates(60, 61);
							else if(curChar == 109)
								jjstateSet[jjnewStateCnt++] = 57;
							break;
						case 537:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 578;
							else if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 572;
							else if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 561;
							else if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 557;
							else if((0x40000000400000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 550;
							else if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 545;
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 567;
							else if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 538;
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 564;
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 542;
							break;
						case 98:
							if((0x7fffffe87fffffeL & l) != 0L) {
								if(kind > 152)
									kind = 152;
								jjCheckNAdd(43);
							}
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 99;
							break;
						case 1:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 2;
							break;
						case 2:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 3;
							break;
						case 3:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 4;
							break;
						case 4:
							if((0x1000000010000L & l) != 0L && kind > 32)
								kind = 32;
							break;
						case 7:
							if((0x2000000020L & l) != 0L)
								jjAddStates(164, 165);
							break;
						case 10:
							if((0x5000000050L & l) != 0L && kind > 78)
								kind = 78;
							break;
						case 12:
							if((0xffffffffefffffffL & l) != 0L)
								jjCheckNAddStates(14, 16);
							break;
						case 13:
							if(curChar == 92)
								jjAddStates(166, 168);
							break;
						case 14:
							if((0x14404410000000L & l) != 0L)
								jjCheckNAddStates(14, 16);
							break;
						case 23:
							if((0x100000001000L & l) != 0L)
								jjCheckNAdd(33);
							break;
						case 28:
							if((0x100000001000L & l) != 0L && kind > 85)
								kind = 85;
							break;
						case 30:
							if((0x100000001000000L & l) != 0L)
								jjCheckNAdd(31);
							break;
						case 31:
							if((0x7e0000007eL & l) == 0L)
								break;
							if(kind > 85)
								kind = 85;
							jjCheckNAddTwoStates(31, 28);
							break;
						case 35:
							if((0x100000001000000L & l) != 0L)
								jjCheckNAdd(36);
							break;
						case 36:
							if((0x7e0000007eL & l) != 0L)
								jjCheckNAddStates(51, 53);
							break;
						case 38:
							if((0x80000000800L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 39;
							break;
						case 39:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 40;
							break;
						case 40:
							if((0x200000002000000L & l) != 0L && kind > 149)
								kind = 149;
							break;
						case 42:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 152)
								kind = 152;
							jjCheckNAdd(43);
							break;
						case 43:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 152)
								kind = 152;
							jjCheckNAdd(43);
							break;
						case 44:
							if(curChar == 96)
								jjCheckNAdd(45);
							break;
						case 45:
							if((0xfffffffeffffffffL & l) != 0L)
								jjCheckNAddTwoStates(45, 46);
							break;
						case 46:
							if(curChar == 96 && kind > 153)
								kind = 153;
							break;
						case 49:
						case 50:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 159)
								kind = 159;
							jjCheckNAdd(50);
							break;
						case 51:
							if(curChar == 97)
								jjstateSet[jjnewStateCnt++] = 47;
							break;
						case 52:
							if(curChar == 116)
								jjstateSet[jjnewStateCnt++] = 51;
							break;
						case 53:
							if(curChar == 97)
								jjstateSet[jjnewStateCnt++] = 52;
							break;
						case 54:
							if(curChar == 100)
								jjstateSet[jjnewStateCnt++] = 53;
							break;
						case 55:
							if(curChar == 97)
								jjstateSet[jjnewStateCnt++] = 54;
							break;
						case 56:
							if(curChar == 116)
								jjstateSet[jjnewStateCnt++] = 55;
							break;
						case 57:
							if(curChar == 101)
								jjstateSet[jjnewStateCnt++] = 56;
							break;
						case 58:
							if(curChar == 109)
								jjstateSet[jjnewStateCnt++] = 57;
							break;
						case 59:
							if(curChar == 105)
								jjCheckNAddTwoStates(60, 61);
							break;
						case 60:
							if(curChar == 115 && kind > 141)
								kind = 141;
							break;
						case 61:
							if(curChar == 83 && kind > 141)
								kind = 141;
							break;
						case 62:
							if(curChar == 73)
								jjCheckNAddTwoStates(61, 60);
							break;
						case 65:
							if((0x2000000020L & l) != 0L)
								jjAddStates(169, 170);
							break;
						case 69:
							if((0x2000000020L & l) != 0L)
								jjAddStates(171, 172);
							break;
						case 75:
							if((0x2000000020L & l) != 0L)
								jjAddStates(173, 174);
							break;
						case 78:
							if((0x8000000080000L & l) != 0L)
								jjAddStates(160, 163);
							break;
						case 79:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 80;
							break;
						case 80:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 81;
							break;
						case 81:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 82;
							break;
						case 82:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 83;
							break;
						case 83:
							if((0x10000000100000L & l) != 0L && kind > 5)
								kind = 5;
							break;
						case 84:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 85;
							break;
						case 85:
							if((0x10000000100000L & l) != 0L && kind > 20)
								kind = 20;
							break;
						case 86:
							if((0x80000000800L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 87;
							break;
						case 87:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 88;
							break;
						case 88:
							if((0x1000000010000L & l) != 0L && kind > 35)
								kind = 35;
							break;
						case 89:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 90;
							break;
						case 90:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 91;
							break;
						case 91:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 92;
							break;
						case 92:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 93;
							break;
						case 93:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 94;
							break;
						case 94:
							if((0x8000000080L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 95;
							break;
						case 95:
							if((0x200000002000000L & l) != 0L && kind > 54)
								kind = 54;
							break;
						case 96:
							if((0x10000000100000L & l) != 0L)
								jjAddStates(157, 159);
							break;
						case 99:
							if((0x40000000400000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 100;
							break;
						case 100:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 101;
							break;
						case 101:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 102;
							break;
						case 102:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 103;
							break;
						case 103:
							if((0x2000000020L & l) != 0L && kind > 6)
								kind = 6;
							break;
						case 104:
							if((0x800000008000L & l) != 0L && kind > 15)
								kind = 15;
							break;
						case 105:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 106;
							break;
						case 106:
							if((0x200000002000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 107;
							break;
						case 107:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 108;
							break;
						case 108:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 109;
							break;
						case 109:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 110;
							break;
						case 110:
							if((0x10000000100000L & l) != 0L && kind > 38)
								kind = 38;
							break;
						case 111:
							if((0x20000000200L & l) != 0L)
								jjAddStates(148, 156);
							break;
						case 112:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 113;
							break;
						case 113:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 114;
							break;
						case 114:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 115;
							break;
						case 115:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 116;
							break;
						case 116:
							if((0x10000000100000L & l) != 0L && kind > 7)
								kind = 7;
							break;
						case 117:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 118;
							break;
						case 118:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 119;
							break;
						case 119:
							if((0x800000008000L & l) != 0L && kind > 18)
								kind = 18;
							break;
						case 120:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 121;
							break;
						case 121:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 122;
							break;
						case 122:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 123;
							break;
						case 123:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 124;
							break;
						case 124:
							if((0x200000002000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 125;
							break;
						case 125:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 126;
							break;
						case 126:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 127;
							break;
						case 127:
							if((0x10000000100000L & l) != 0L && kind > 26)
								kind = 26;
							break;
						case 128:
							if((0x400000004000L & l) != 0L && kind > 139)
								kind = 139;
							break;
						case 129:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 130;
							break;
						case 130:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 131;
							break;
						case 131:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 132;
							break;
						case 132:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 133;
							break;
						case 133:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 134;
							break;
						case 134:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 135;
							break;
						case 135:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 136;
							break;
						case 136:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 137;
							break;
						case 137:
							if((0x4000000040L & l) != 0L && kind > 150)
								kind = 150;
							break;
						case 138:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 139;
							break;
						case 139:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 140;
							break;
						case 140:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 141;
							break;
						case 141:
							if((0x100000001000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 142;
							break;
						case 143:
							if(curChar == 95)
								jjAddStates(175, 176);
							break;
						case 145:
						case 146:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 154)
								kind = 154;
							jjCheckNAddTwoStates(146, 147);
							break;
						case 149:
						case 150:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 154)
								kind = 154;
							jjCheckNAddTwoStates(147, 150);
							break;
						case 151:
							if(curChar == 95)
								jjstateSet[jjnewStateCnt++] = 143;
							break;
						case 152:
							if(curChar == 95)
								jjstateSet[jjnewStateCnt++] = 151;
							break;
						case 153:
							if(curChar == 64)
								jjstateSet[jjnewStateCnt++] = 152;
							break;
						case 154:
							if(curChar == 112)
								jjstateSet[jjnewStateCnt++] = 153;
							break;
						case 155:
							if(curChar == 97)
								jjstateSet[jjnewStateCnt++] = 154;
							break;
						case 156:
							if(curChar == 109)
								jjstateSet[jjnewStateCnt++] = 155;
							break;
						case 157:
							if(curChar == 100)
								jjstateSet[jjnewStateCnt++] = 156;
							break;
						case 158:
							if(curChar == 114)
								jjstateSet[jjnewStateCnt++] = 157;
							break;
						case 159:
							if(curChar == 111)
								jjstateSet[jjnewStateCnt++] = 158;
							break;
						case 160:
							if(curChar == 99)
								jjstateSet[jjnewStateCnt++] = 159;
							break;
						case 161:
							if(curChar == 101)
								jjstateSet[jjnewStateCnt++] = 160;
							break;
						case 162:
							if(curChar == 114)
								jjstateSet[jjnewStateCnt++] = 161;
							break;
						case 163:
							if(curChar == 64)
								jjstateSet[jjnewStateCnt++] = 162;
							break;
						case 164:
							if(curChar == 95)
								jjstateSet[jjnewStateCnt++] = 163;
							break;
						case 165:
							if(curChar == 95)
								jjstateSet[jjnewStateCnt++] = 164;
							break;
						case 166:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 167;
							break;
						case 167:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 168;
							break;
						case 168:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 169;
							break;
						case 169:
							if((0x100000001000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 170;
							break;
						case 170:
							if((0x40000000400000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 171;
							break;
						case 171:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 172;
							break;
						case 172:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 173;
							break;
						case 173:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 174;
							break;
						case 174:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 175;
							break;
						case 175:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 176;
							break;
						case 178:
						case 179:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 155)
								kind = 155;
							jjCheckNAddTwoStates(179, 180);
							break;
						case 182:
						case 183:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 155)
								kind = 155;
							jjCheckNAddTwoStates(180, 183);
							break;
						case 184:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 185;
							break;
						case 185:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 186;
							break;
						case 186:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 187;
							break;
						case 187:
							if((0x100000001000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 188;
							break;
						case 188:
							if((0x40000000400000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 189;
							break;
						case 189:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 190;
							break;
						case 190:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 191;
							break;
						case 191:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 192;
							break;
						case 192:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 193;
							break;
						case 193:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 194;
							break;
						case 194:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 195;
							break;
						case 195:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 196;
							break;
						case 196:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 197;
							break;
						case 199:
						case 200:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 156)
								kind = 156;
							jjCheckNAddTwoStates(200, 201);
							break;
						case 203:
						case 204:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 156)
								kind = 156;
							jjCheckNAddTwoStates(201, 204);
							break;
						case 205:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 206;
							break;
						case 206:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 207;
							break;
						case 207:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 208;
							break;
						case 208:
							if((0x100000001000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 209;
							break;
						case 209:
							if((0x40000000400000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 210;
							break;
						case 210:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 211;
							break;
						case 211:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 212;
							break;
						case 212:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 213;
							break;
						case 213:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 214;
							break;
						case 214:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 215;
							break;
						case 215:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 216;
							break;
						case 216:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 217;
							break;
						case 217:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 218;
							break;
						case 218:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 219;
							break;
						case 221:
						case 222:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 157)
								kind = 157;
							jjCheckNAddTwoStates(222, 223);
							break;
						case 225:
						case 226:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 157)
								kind = 157;
							jjCheckNAddTwoStates(223, 226);
							break;
						case 227:
							if((0x800000008L & l) != 0L)
								jjAddStates(139, 147);
							break;
						case 228:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 229;
							break;
						case 229:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 230;
							break;
						case 230:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 231;
							break;
						case 231:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 232;
							break;
						case 232:
							if((0x2000000020L & l) != 0L && kind > 8)
								kind = 8;
							break;
						case 233:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 234;
							break;
						case 234:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 235;
							break;
						case 235:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 236;
							break;
						case 236:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 237;
							break;
						case 237:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 238;
							break;
						case 238:
							if((0x10000000100000L & l) != 0L && kind > 24)
								kind = 24;
							break;
						case 239:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 240;
							break;
						case 240:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 241;
							break;
						case 241:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 242;
							break;
						case 242:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 243;
							break;
						case 243:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 244;
							break;
						case 244:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 245;
							break;
						case 245:
							if((0x8000000080000L & l) != 0L && kind > 143)
								kind = 143;
							break;
						case 246:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 247;
							break;
						case 247:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 248;
							break;
						case 248:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 249;
							break;
						case 249:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 250;
							break;
						case 250:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 251;
							break;
						case 251:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 252;
							break;
						case 252:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 253;
							break;
						case 253:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 254;
							break;
						case 254:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 255;
							break;
						case 255:
							if((0x100000001000L & l) != 0L && kind > 144)
								kind = 144;
							break;
						case 256:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 257;
							break;
						case 257:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 258;
							break;
						case 258:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 259;
							break;
						case 259:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 260;
							break;
						case 260:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 261;
							break;
						case 261:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 262;
							break;
						case 262:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 263;
							break;
						case 263:
							if((0x80000000800L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 264;
							break;
						case 264:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 265;
							break;
						case 265:
							if((0x200000002000000L & l) != 0L && kind > 145)
								kind = 145;
							break;
						case 266:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 267;
							break;
						case 267:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 268;
							break;
						case 268:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 269;
							break;
						case 269:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 270;
							break;
						case 270:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 271;
							break;
						case 271:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 272;
							break;
						case 272:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 273;
							break;
						case 273:
							if((0x40000000400000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 274;
							break;
						case 274:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 275;
							break;
						case 275:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 276;
							break;
						case 276:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 277;
							break;
						case 277:
							if((0x2000000020L & l) != 0L && kind > 146)
								kind = 146;
							break;
						case 278:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 279;
							break;
						case 279:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 280;
							break;
						case 280:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 281;
							break;
						case 281:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 282;
							break;
						case 282:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 283;
							break;
						case 283:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 284;
							break;
						case 284:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 285;
							break;
						case 285:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 286;
							break;
						case 286:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 287;
							break;
						case 287:
							if((0x100000001000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 288;
							break;
						case 288:
							if((0x10000000100000L & l) != 0L && kind > 147)
								kind = 147;
							break;
						case 289:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 290;
							break;
						case 290:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 291;
							break;
						case 291:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 292;
							break;
						case 292:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 293;
							break;
						case 293:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 294;
							break;
						case 294:
							if((0x4000000040000L & l) != 0L && kind > 151)
								kind = 151;
							break;
						case 295:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 296;
							break;
						case 296:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 297;
							break;
						case 297:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 298;
							break;
						case 298:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 299;
							break;
						case 299:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 300;
							break;
						case 300:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 301;
							break;
						case 303:
						case 304:
							if((0x7fffffe87fffffeL & l) == 0L)
								break;
							if(kind > 158)
								kind = 158;
							jjCheckNAdd(304);
							break;
						case 305:
							if((0x1000000010L & l) != 0L)
								jjAddStates(135, 138);
							break;
						case 306:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 307;
							break;
						case 307:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 308;
							break;
						case 308:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 309;
							break;
						case 309:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 310;
							break;
						case 310:
							if((0x2000000020L & l) != 0L && kind > 9)
								kind = 9;
							break;
						case 311:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 312;
							break;
						case 312:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 313;
							break;
						case 313:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 314;
							break;
						case 314:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 315;
							break;
						case 315:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 316;
							break;
						case 316:
							if((0x1000000010L & l) != 0L && kind > 30)
								kind = 30;
							break;
						case 317:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 318;
							break;
						case 318:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 319;
							break;
						case 319:
							if((0x800000008L & l) != 0L && kind > 41)
								kind = 41;
							break;
						case 320:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 321;
							break;
						case 321:
							if((0x1000000010000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 322;
							break;
						case 322:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 323;
							break;
						case 323:
							if((0x10000000100L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 324;
							break;
						case 324:
							if(curChar == 95)
								jjstateSet[jjnewStateCnt++] = 325;
							break;
						case 325:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 326;
							break;
						case 326:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 327;
							break;
						case 327:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 328;
							break;
						case 328:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 329;
							break;
						case 329:
							if((0x10000000100000L & l) != 0L && kind > 55)
								kind = 55;
							break;
						case 330:
							if((0x40000000400000L & l) != 0L)
								jjAddStates(133, 134);
							break;
						case 331:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 332;
							break;
						case 332:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 333;
							break;
						case 333:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 334;
							break;
						case 334:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 335;
							break;
						case 335:
							if((0x100000001000000L & l) != 0L && kind > 10)
								kind = 10;
							break;
						case 336:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 337;
							break;
						case 337:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 338;
							break;
						case 338:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 339;
							break;
						case 339:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 340;
							break;
						case 340:
							if((0x8000000080000L & l) != 0L && kind > 19)
								kind = 19;
							break;
						case 341:
							if((0x2000000020L & l) != 0L)
								jjAddStates(131, 132);
							break;
						case 342:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 343;
							break;
						case 343:
							if((0x8000000080L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 344;
							break;
						case 344:
							if((0x2000000020L & l) != 0L && kind > 11)
								kind = 11;
							break;
						case 345:
							if((0x100000001000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 346;
							break;
						case 346:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 347;
							break;
						case 347:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 348;
							break;
						case 348:
							if((0x1000000010000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 349;
							break;
						case 349:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 350;
							break;
						case 350:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 351;
							break;
						case 351:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 352;
							break;
						case 352:
							if((0x400000004000L & l) != 0L && kind > 62)
								kind = 62;
							break;
						case 353:
							if((0x20000000200000L & l) != 0L)
								jjAddStates(127, 130);
							break;
						case 354:
							if((0x1000000010000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 355;
							break;
						case 355:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 356;
							break;
						case 356:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 357;
							break;
						case 357:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 358;
							break;
						case 358:
							if((0x2000000020L & l) != 0L && kind > 12)
								kind = 12;
							break;
						case 359:
							if((0x1000000010000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 360;
							break;
						case 360:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 361;
							break;
						case 361:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 362;
							break;
						case 362:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 363;
							break;
						case 363:
							if((0x10000000100000L & l) != 0L && kind > 13)
								kind = 13;
							break;
						case 364:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 365;
							break;
						case 365:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 366;
							break;
						case 366:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 367;
							break;
						case 367:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 368;
							break;
						case 368:
							if((0x2000000020L & l) != 0L && kind > 52)
								kind = 52;
							break;
						case 369:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 370;
							break;
						case 370:
							if((0x80000000800000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 371;
							break;
						case 371:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 372;
							break;
						case 372:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 373;
							break;
						case 373:
							if((0x1000000010L & l) != 0L && kind > 60)
								kind = 60;
							break;
						case 374:
							if((0x4000000040L & l) != 0L)
								jjAddStates(125, 126);
							break;
						case 376:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 377;
							break;
						case 377:
							if((0x200000002000L & l) != 0L && kind > 14)
								kind = 14;
							break;
						case 378:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 379;
							break;
						case 379:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 380;
							break;
						case 380:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 381;
							break;
						case 381:
							if((0x10000000100L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 382;
							break;
						case 382:
							if((0x1000000010000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 383;
							break;
						case 383:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 384;
							break;
						case 384:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 385;
							break;
						case 385:
							if((0x400000004000L & l) != 0L && kind > 42)
								kind = 42;
							break;
						case 386:
							if((0x80000000800000L & l) != 0L)
								jjAddStates(121, 124);
							break;
						case 387:
							if((0x10000000100L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 388;
							break;
						case 388:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 389;
							break;
						case 389:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 390;
							break;
						case 390:
							if((0x2000000020L & l) != 0L && kind > 16)
								kind = 16;
							break;
						case 391:
							if((0x10000000100L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 392;
							break;
						case 392:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 393;
							break;
						case 393:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 394;
							break;
						case 394:
							if((0x2000000020L & l) != 0L && kind > 17)
								kind = 17;
							break;
						case 395:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 396;
							break;
						case 396:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 397;
							break;
						case 397:
							if((0x10000000100000L & l) != 0L && kind > 48)
								kind = 48;
							break;
						case 398:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 399;
							break;
						case 399:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 400;
							break;
						case 400:
							if((0x10000000100L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 401;
							break;
						case 401:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 402;
							break;
						case 402:
							if((0x400000004000L & l) != 0L && kind > 59)
								kind = 59;
							break;
						case 403:
							if((0x200000002L & l) != 0L)
								jjAddStates(116, 120);
							break;
						case 404:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 405;
							break;
						case 405:
							if((0x1000000010L & l) != 0L && kind > 21)
								kind = 21;
							break;
						case 406:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 407;
							break;
						case 407:
							if((0x1000000010L & l) != 0L && kind > 27)
								kind = 27;
							break;
						case 408:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 409;
							break;
						case 409:
							if((0x800000008L & l) != 0L && kind > 39)
								kind = 39;
							break;
						case 410:
							if((0x8000000080000L & l) != 0L && kind > 40)
								kind = 40;
							break;
						case 411:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 412;
							break;
						case 412:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 413;
							break;
						case 413:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 414;
							break;
						case 414:
							if((0x4000000040000L & l) != 0L && kind > 45)
								kind = 45;
							break;
						case 415:
							if((0x1000000010000L & l) != 0L)
								jjAddStates(114, 115);
							break;
						case 416:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 417;
							break;
						case 417:
							if((0x10000000100000L & l) != 0L && kind > 22)
								kind = 22;
							break;
						case 418:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 419;
							break;
						case 419:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 420;
							break;
						case 420:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 421;
							break;
						case 421:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 422;
							break;
						case 422:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 423;
							break;
						case 423:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 424;
							break;
						case 424:
							if((0x100000001000L & l) != 0L && kind > 53)
								kind = 53;
							break;
						case 425:
							if((0x200000002000L & l) != 0L)
								jjAddStates(111, 113);
							break;
						case 426:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 427;
							break;
						case 427:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 428;
							break;
						case 428:
							if((0x8000000080L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 429;
							break;
						case 429:
							if((0x2000000020L & l) != 0L && kind > 23)
								kind = 23;
							break;
						case 430:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 431;
							break;
						case 431:
							if((0x100000001000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 432;
							break;
						case 432:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 433;
							break;
						case 433:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 434;
							break;
						case 434:
							if((0x1000000010000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 435;
							break;
						case 435:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 436;
							break;
						case 436:
							if((0x10000000100L & l) != 0L && kind > 61)
								kind = 61;
							break;
						case 437:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 438;
							break;
						case 438:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 439;
							break;
						case 439:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 440;
							break;
						case 440:
							if((0x10000000100L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 441;
							break;
						case 441:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 442;
							break;
						case 442:
							if((0x8000000080000L & l) != 0L && kind > 148)
								kind = 148;
							break;
						case 443:
							if((0x4000000040000L & l) != 0L)
								jjAddStates(107, 110);
							break;
						case 444:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 445;
							break;
						case 445:
							if((0x200000002000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 446;
							break;
						case 446:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 447;
							break;
						case 447:
							if((0x40000000400000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 448;
							break;
						case 448:
							if((0x2000000020L & l) != 0L && kind > 25)
								kind = 25;
							break;
						case 449:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 450;
							break;
						case 450:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 451;
							break;
						case 451:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 452;
							break;
						case 452:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 453;
							break;
						case 453:
							if((0x400000004000L & l) != 0L && kind > 43)
								kind = 43;
							break;
						case 454:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 455;
							break;
						case 455:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 456;
							break;
						case 456:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 457;
							break;
						case 457:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 458;
							break;
						case 458:
							if((0x1000000010L & l) != 0L && kind > 47)
								kind = 47;
							break;
						case 459:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 460;
							break;
						case 460:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 461;
							break;
						case 461:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 462;
							break;
						case 462:
							if((0x200000002000000L & l) != 0L && kind > 49)
								kind = 49;
							break;
						case 463:
							if((0x800000008000L & l) != 0L)
								jjAddStates(104, 106);
							break;
						case 464:
							if((0x4000000040000L & l) != 0L && kind > 28)
								kind = 28;
							break;
						case 465:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 466;
							break;
						case 466:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 467;
							break;
						case 467:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 468;
							break;
						case 468:
							if((0x4000000040000L & l) != 0L && kind > 31)
								kind = 31;
							break;
						case 469:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 470;
							break;
						case 470:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 471;
							break;
						case 471:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 472;
							break;
						case 472:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 473;
							break;
						case 473:
							if((0x10000000100000L & l) != 0L && kind > 37)
								kind = 37;
							break;
						case 474:
							if((0x400000004000L & l) != 0L)
								jjAddStates(100, 103);
							break;
						case 475:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 476;
							break;
						case 476:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 477;
							break;
						case 477:
							if((0x100000001000L & l) != 0L && kind > 29)
								kind = 29;
							break;
						case 478:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 479;
							break;
						case 479:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 480;
							break;
						case 480:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 481;
							break;
						case 481:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 482;
							break;
						case 482:
							if((0x10000000100L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 483;
							break;
						case 483:
							if((0x2000000020L & l) != 0L && kind > 51)
								kind = 51;
							break;
						case 484:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 485;
							break;
						case 485:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 486;
							break;
						case 486:
							if((0x4000000040000L & l) != 0L && kind > 58)
								kind = 58;
							break;
						case 487:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 488;
							break;
						case 488:
							if((0x10000000100000L & l) != 0L && kind > 138)
								kind = 138;
							break;
						case 489:
							if((0x400000004L & l) != 0L)
								jjAddStates(95, 99);
							break;
						case 490:
							if((0x200000002000000L & l) != 0L && kind > 33)
								kind = 33;
							break;
						case 491:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 492;
							break;
						case 492:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 493;
							break;
						case 493:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 494;
							break;
						case 494:
							if((0x10000000100L & l) != 0L && kind > 36)
								kind = 36;
							break;
						case 495:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 496;
							break;
						case 496:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 497;
							break;
						case 497:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 498;
							break;
						case 498:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 499;
							break;
						case 499:
							if((0x2000000020L & l) != 0L && kind > 44)
								kind = 44;
							break;
						case 500:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 501;
							break;
						case 501:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 502;
							break;
						case 502:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 503;
							break;
						case 503:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 504;
							break;
						case 504:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 505;
							break;
						case 505:
							if((0x10000000100L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 506;
							break;
						case 506:
							if(curChar == 95)
								jjstateSet[jjnewStateCnt++] = 507;
							break;
						case 507:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 508;
							break;
						case 508:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 509;
							break;
						case 509:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 510;
							break;
						case 510:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 511;
							break;
						case 511:
							if((0x10000000100000L & l) != 0L && kind > 56)
								kind = 56;
							break;
						case 512:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 513;
							break;
						case 513:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 514;
							break;
						case 514:
							if((0x80000000800000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 515;
							break;
						case 515:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 516;
							break;
						case 516:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 517;
							break;
						case 517:
							if((0x400000004000L & l) != 0L && kind > 142)
								kind = 142;
							break;
						case 518:
							if((0x100000001000L & l) != 0L)
								jjAddStates(90, 94);
							break;
						case 519:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 520;
							break;
						case 520:
							if((0x200000002000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 521;
							break;
						case 521:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 522;
							break;
						case 522:
							if((0x10000000100000L & l) != 0L && kind > 34)
								kind = 34;
							break;
						case 523:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 524;
							break;
						case 524:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 525;
							break;
						case 525:
							if((0x80000000800L & l) != 0L && kind > 46)
								kind = 46;
							break;
						case 526:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 527;
							break;
						case 527:
							if((0x10000000100000L & l) != 0L && kind > 50)
								kind = 50;
							break;
						case 528:
							if((0x20000000200000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 529;
							break;
						case 529:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 530;
							break;
						case 530:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 531;
							break;
						case 531:
							if((0x400000004000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 532;
							break;
						case 532:
							if((0x2000000020L & l) != 0L && kind > 57)
								kind = 57;
							break;
						case 533:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 534;
							break;
						case 534:
							if((0x80000000800L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 535;
							break;
						case 535:
							if((0x2000000020L & l) != 0L && kind > 140)
								kind = 140;
							break;
						case 536:
							if(curChar == 64)
								jjAddStates(80, 89);
							break;
						case 538:
							if((0x10000000100L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 539;
							break;
						case 539:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 540;
							break;
						case 540:
							if((0x8000000080000L & l) != 0L && kind > 63)
								kind = 63;
							break;
						case 541:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 542;
							break;
						case 542:
						case 570:
							if((0x20000000200L & l) != 0L)
								jjCheckNAdd(543);
							break;
						case 543:
							if((0x1000000010L & l) != 0L && kind > 64)
								kind = 64;
							break;
						case 544:
							if((0x800000008L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 545;
							break;
						case 545:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 546;
							break;
						case 546:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 547;
							break;
						case 547:
							if((0x8000000080000L & l) != 0L)
								jjCheckNAdd(548);
							break;
						case 548:
							if((0x8000000080000L & l) != 0L && kind > 64)
								kind = 64;
							break;
						case 549:
							if((0x40000000400000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 550;
							break;
						case 550:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 551;
							break;
						case 551:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 552;
							break;
						case 552:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 553;
							break;
						case 553:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 554;
							break;
						case 554:
							if((0x800000008000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 555;
							break;
						case 555:
							if((0x400000004000L & l) != 0L && kind > 64)
								kind = 64;
							break;
						case 556:
							if((0x8000000080000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 557;
							break;
						case 557:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 558;
							break;
						case 558:
							if((0x400000004000000L & l) != 0L)
								jjCheckNAdd(559);
							break;
						case 559:
							if((0x2000000020L & l) != 0L && kind > 64)
								kind = 64;
							break;
						case 560:
							if((0x10000000100000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 561;
							break;
						case 561:
							if((0x200000002000000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 562;
							break;
						case 562:
							if((0x1000000010000L & l) != 0L)
								jjCheckNAdd(559);
							break;
						case 563:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 564;
							break;
						case 564:
							if((0x200000002L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 565;
							break;
						case 565:
							if((0x80000000800000L & l) != 0L && kind > 64)
								kind = 64;
							break;
						case 566:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 567;
							break;
						case 567:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 568;
							break;
						case 568:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 569;
							break;
						case 569:
							if(curChar == 95)
								jjstateSet[jjnewStateCnt++] = 570;
							break;
						case 571:
							if((0x4000000040000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 572;
							break;
						case 572:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 573;
							break;
						case 573:
							if((0x1000000010L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 574;
							break;
						case 574:
							if(curChar == 95)
								jjstateSet[jjnewStateCnt++] = 575;
							break;
						case 575:
							if((0x1000000010000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 576;
							break;
						case 576:
							if((0x800000008000L & l) != 0L)
								jjCheckNAdd(548);
							break;
						case 577:
							if((0x4000000040L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 578;
							break;
						case 578:
							if((0x20000000200L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 579;
							break;
						case 579:
							if((0x2000000020L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 580;
							break;
						case 580:
							if((0x100000001000L & l) != 0L)
								jjstateSet[jjnewStateCnt++] = 581;
							break;
						case 581:
							if((0x1000000010L & l) != 0L)
								jjCheckNAdd(548);
							break;
						case 584:
							if((0x100000001000L & l) != 0L && kind > 74)
								kind = 74;
							break;
						case 586:
							if((0xffffffffefffffffL & l) != 0L)
								jjCheckNAdd(587);
							break;
						case 588:
							if(curChar == 92)
								jjAddStates(177, 179);
							break;
						case 589:
							if((0x14404410000000L & l) != 0L)
								jjCheckNAdd(587);
							break;
						case 594:
							if((0xffffffffefffffffL & l) != 0L)
								jjCheckNAddStates(68, 70);
							break;
						case 595:
							if(curChar == 92)
								jjAddStates(180, 182);
							break;
						case 596:
							if((0x14404410000000L & l) != 0L)
								jjCheckNAddStates(68, 70);
							break;
						case 603:
							if((0x100000001000000L & l) != 0L)
								jjCheckNAdd(604);
							break;
						case 604:
							if((0x7e0000007eL & l) == 0L)
								break;
							if(kind > 74)
								kind = 74;
							jjCheckNAddTwoStates(604, 584);
							break;
						case 606:
							if((0x100000001000000L & l) != 0L)
								jjCheckNAddTwoStates(607, 608);
							break;
						case 607:
							if((0x7e0000007eL & l) != 0L)
								jjCheckNAddTwoStates(607, 608);
							break;
						case 609:
							if((0x7e0000007eL & l) != 0L)
								jjAddStates(183, 184);
							break;
						case 610:
							if((0x1000000010000L & l) != 0L)
								jjAddStates(185, 186);
							break;
						case 613:
							if((0x100000001000000L & l) != 0L)
								jjCheckNAdd(614);
							break;
						case 614:
							if((0x7e0000007eL & l) != 0L)
								jjCheckNAddStates(77, 79);
							break;
						case 616:
							if((0x1000000010000L & l) != 0L)
								jjAddStates(187, 188);
							break;
						default:
							break;
					}
				} while(i != startsAt);
			} else {
				int hiByte = (int)(curChar >> 8);
				int i1 = hiByte >> 6;
				long l1 = 1L << (hiByte & 077);
				int i2 = (curChar & 0xff) >> 6;
				long l2 = 1L << (curChar & 077);
				do {
					switch(jjstateSet[--i]) {
						case 12:
							if(jjCanMove_0(hiByte, i1, i2, l1, l2))
								jjAddStates(14, 16);
							break;
						case 45:
							if(jjCanMove_0(hiByte, i1, i2, l1, l2))
								jjAddStates(57, 58);
							break;
						case 586:
							if(jjCanMove_0(hiByte, i1, i2, l1, l2))
								jjstateSet[jjnewStateCnt++] = 587;
							break;
						case 594:
							if(jjCanMove_0(hiByte, i1, i2, l1, l2))
								jjAddStates(68, 70);
							break;
						default:
							break;
					}
				} while(i != startsAt);
			}
			if(kind != 0x7fffffff) {
				jjmatchedKind = kind;
				jjmatchedPos = curPos;
				kind = 0x7fffffff;
			}
			++curPos;
			if((i = jjnewStateCnt) == (startsAt = 619 - (jjnewStateCnt = startsAt)))
				return curPos;
			try {
				curChar = input_stream.readChar();
			} catch(java.io.IOException e) {
				return curPos;
			}
		}
	}

	static final int[] jjnextStates = {64, 65, 10, 68, 69, 72, 73, 586, 588, 594, 595, 597, 21, 34, 12, 13, 15, 583, 584, 22, 23, 33, 603, 605, 584, 606, 613, 35, 37, 23, 33, 22, 23, 33, 35, 37, 23, 33, 6, 7, 10, 12, 13, 17, 15, 25, 26, 29, 30, 32, 28, 36, 23, 33, 37, 23, 33, 45, 46, 64, 65, 10, 74, 75, 10, 165, 144, 145, 594, 595, 597, 594, 595, 599, 597, 607, 608, 614, 615, 616, 537, 541, 544, 549, 556, 560, 563, 566, 571, 577, 519, 523, 526, 528, 533, 490, 491, 495, 500, 512, 475, 478, 484, 487, 464, 465, 469, 444, 449, 454, 459, 426, 430, 437, 416, 418, 404, 406, 408, 410, 411, 387, 391, 395, 398, 375, 378, 354, 359, 364, 369, 342, 345, 331, 336, 306, 311, 317, 320, 228, 233, 239, 246, 256, 266, 278, 289, 295, 112, 117, 120, 128, 129, 138, 166, 184, 205, 97, 104, 105, 79, 84, 86, 89, 8, 9, 14, 16, 18, 66, 67, 70, 71, 76, 77, 144, 145, 589, 590, 592, 596, 598, 600, 609, 610, 611, 612, 617, 618,};

	private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2) {

		switch(hiByte) {
			case 0:
				return ((jjbitVec2[i2] & l2) != 0L);
			default:
				if((jjbitVec0[i1] & l1) != 0L)
					return true;
				return false;
		}
	}

	/** Token literal values. */
	public static final String[] jjstrLiteralImages = {"", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "\164\162\165\145", "\146\141\154\163\145", "\50", "\51", "\173", "\175", "\133", "\135", "\73", "\54", "\56", "\100", "\44", "\140", "\75", "\75\75", "\74", "\76", "\41", "\176", "\77", "\72", "\74\75", "\76\75", "\41\75", "\74\76", "\174\174", "\46\46", "\53\53", "\55\55", "\53", "\55", "\52", "\57", "\46", "\174", "\136", "\45", "\74\74", "\53\75", "\55\75", "\52\75", "\57\75", "\46\75", "\174\75", "\136\75", "\45\75", "\74\74\75", "\76\76\75", "\76\76\76\75", "\56\56\56", "\56\56", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "\43",};
	/** Lexer state names. */
	public static final String[] lexStateNames = {"DEFAULT",};
	static final long[] jjtoToken = {0xffffffffffffffe1L, 0xfffffffffff84401L, 0x4ffffffffL,};
	static final long[] jjtoSkip = {0x1eL, 0x0L, 0x0L,};
	protected CharStream input_stream;
	private final int[] jjrounds = new int[619];
	private final int[] jjstateSet = new int[1238];
	protected char curChar;

	/** Constructor. */
	public OrientSqlTokenManager(CharStream stream) {

		input_stream = stream;
	}

	/** Constructor. */
	public OrientSqlTokenManager(CharStream stream, int lexState) {

		this(stream);
		SwitchTo(lexState);
	}

	/** Reinitialise parser. */
	public void ReInit(CharStream stream) {

		jjmatchedPos = jjnewStateCnt = 0;
		curLexState = defaultLexState;
		input_stream = stream;
		ReInitRounds();
	}

	private void ReInitRounds() {

		int i;
		jjround = 0x80000001;
		for(i = 619; i-- > 0;)
			jjrounds[i] = 0x80000000;
	}

	/** Reinitialise parser. */
	public void ReInit(CharStream stream, int lexState) {

		ReInit(stream);
		SwitchTo(lexState);
	}

	/** Switch to specified lex state. */
	public void SwitchTo(int lexState) {

		if(lexState >= 1 || lexState < 0)
			throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
		else
			curLexState = lexState;
	}

	protected Token jjFillToken() {

		final Token t;
		final String curTokenImage;
		final int beginLine;
		final int endLine;
		final int beginColumn;
		final int endColumn;
		String im = jjstrLiteralImages[jjmatchedKind];
		curTokenImage = (im == null) ? input_stream.GetImage() : im;
		beginLine = input_stream.getBeginLine();
		beginColumn = input_stream.getBeginColumn();
		endLine = input_stream.getEndLine();
		endColumn = input_stream.getEndColumn();
		t = Token.newToken(jjmatchedKind, curTokenImage);
		t.beginLine = beginLine;
		t.endLine = endLine;
		t.beginColumn = beginColumn;
		t.endColumn = endColumn;
		return t;
	}

	int curLexState = 0;
	int defaultLexState = 0;
	int jjnewStateCnt;
	int jjround;
	int jjmatchedPos;
	int jjmatchedKind;

	/** Get the next Token. */
	public Token getNextToken() {

		Token matchedToken;
		int curPos = 0;
		EOFLoop:
		for(;;) {
			try {
				curChar = input_stream.BeginToken();
			} catch(java.io.IOException e) {
				jjmatchedKind = 0;
				matchedToken = jjFillToken();
				return matchedToken;
			}
			try {
				input_stream.backup(0);
				while(curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
					curChar = input_stream.BeginToken();
			} catch(java.io.IOException e1) {
				continue EOFLoop;
			}
			jjmatchedKind = 0x7fffffff;
			jjmatchedPos = 0;
			curPos = jjMoveStringLiteralDfa0_0();
			if(jjmatchedKind != 0x7fffffff) {
				if(jjmatchedPos + 1 < curPos)
					input_stream.backup(curPos - jjmatchedPos - 1);
				if((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L) {
					matchedToken = jjFillToken();
					return matchedToken;
				} else {
					continue EOFLoop;
				}
			}
			int error_line = input_stream.getEndLine();
			int error_column = input_stream.getEndColumn();
			String error_after = null;
			boolean EOFSeen = false;
			try {
				input_stream.readChar();
				input_stream.backup(1);
			} catch(java.io.IOException e1) {
				EOFSeen = true;
				error_after = curPos <= 1 ? "" : input_stream.GetImage();
				if(curChar == '\n' || curChar == '\r') {
					error_line++;
					error_column = 0;
				} else
					error_column++;
			}
			if(!EOFSeen) {
				input_stream.backup(1);
				error_after = curPos <= 1 ? "" : input_stream.GetImage();
			}
			throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
		}
	}

	private void jjCheckNAdd(int state) {

		if(jjrounds[state] != jjround) {
			jjstateSet[jjnewStateCnt++] = state;
			jjrounds[state] = jjround;
		}
	}

	private void jjAddStates(int start, int end) {

		do {
			jjstateSet[jjnewStateCnt++] = jjnextStates[start];
		} while(start++ != end);
	}

	private void jjCheckNAddTwoStates(int state1, int state2) {

		jjCheckNAdd(state1);
		jjCheckNAdd(state2);
	}

	private void jjCheckNAddStates(int start, int end) {

		do {
			jjCheckNAdd(jjnextStates[start]);
		} while(start++ != end);
	}
}
