/* Generated By:JJTree&JavaCC: Do not edit this line. OrientSqlConstants.java */
package com.orientechnologies.orient.core.sql.parser;

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface OrientSqlConstants {

	/** End of File. */
	int EOF = 0;
	/** RegularExpression Id. */
	int SELECT = 5;
	/** RegularExpression Id. */
	int TRAVERSE = 6;
	/** RegularExpression Id. */
	int INSERT = 7;
	/** RegularExpression Id. */
	int CREATE = 8;
	/** RegularExpression Id. */
	int DELETE = 9;
	/** RegularExpression Id. */
	int VERTEX = 10;
	/** RegularExpression Id. */
	int EDGE = 11;
	/** RegularExpression Id. */
	int UPDATE = 12;
	/** RegularExpression Id. */
	int UPSERT = 13;
	/** RegularExpression Id. */
	int FROM = 14;
	/** RegularExpression Id. */
	int TO = 15;
	/** RegularExpression Id. */
	int WHERE = 16;
	/** RegularExpression Id. */
	int WHILE = 17;
	/** RegularExpression Id. */
	int INTO = 18;
	/** RegularExpression Id. */
	int VALUES = 19;
	/** RegularExpression Id. */
	int SET = 20;
	/** RegularExpression Id. */
	int ADD = 21;
	/** RegularExpression Id. */
	int PUT = 22;
	/** RegularExpression Id. */
	int MERGE = 23;
	/** RegularExpression Id. */
	int CONTENT = 24;
	/** RegularExpression Id. */
	int REMOVE = 25;
	/** RegularExpression Id. */
	int INCREMENT = 26;
	/** RegularExpression Id. */
	int AND = 27;
	/** RegularExpression Id. */
	int OR = 28;
	/** RegularExpression Id. */
	int NULL = 29;
	/** RegularExpression Id. */
	int DEFINED = 30;
	/** RegularExpression Id. */
	int ORDER = 31;
	/** RegularExpression Id. */
	int GROUP = 32;
	/** RegularExpression Id. */
	int BY = 33;
	/** RegularExpression Id. */
	int LIMIT = 34;
	/** RegularExpression Id. */
	int SKIP2 = 35;
	/** RegularExpression Id. */
	int BATCH = 36;
	/** RegularExpression Id. */
	int OFFSET = 37;
	/** RegularExpression Id. */
	int TIMEOUT = 38;
	/** RegularExpression Id. */
	int ASC = 39;
	/** RegularExpression Id. */
	int AS = 40;
	/** RegularExpression Id. */
	int DESC = 41;
	/** RegularExpression Id. */
	int FETCHPLAN = 42;
	/** RegularExpression Id. */
	int RETURN = 43;
	/** RegularExpression Id. */
	int BEFORE = 44;
	/** RegularExpression Id. */
	int AFTER = 45;
	/** RegularExpression Id. */
	int LOCK = 46;
	/** RegularExpression Id. */
	int RECORD = 47;
	/** RegularExpression Id. */
	int WAIT = 48;
	/** RegularExpression Id. */
	int RETRY = 49;
	/** RegularExpression Id. */
	int LET = 50;
	/** RegularExpression Id. */
	int NOCACHE = 51;
	/** RegularExpression Id. */
	int UNSAFE = 52;
	/** RegularExpression Id. */
	int PARALLEL = 53;
	/** RegularExpression Id. */
	int STRATEGY = 54;
	/** RegularExpression Id. */
	int DEPTH_FIRST = 55;
	/** RegularExpression Id. */
	int BREADTH_FIRST = 56;
	/** RegularExpression Id. */
	int LUCENE = 57;
	/** RegularExpression Id. */
	int NEAR = 58;
	/** RegularExpression Id. */
	int WITHIN = 59;
	/** RegularExpression Id. */
	int UNWIND = 60;
	/** RegularExpression Id. */
	int MAXDEPTH = 61;
	/** RegularExpression Id. */
	int EXCEPTION = 62;
	/** RegularExpression Id. */
	int THIS = 63;
	/** RegularExpression Id. */
	int RECORD_ATTRIBUTE = 64;
	/** RegularExpression Id. */
	int RID_ATTR = 65;
	/** RegularExpression Id. */
	int CLASS_ATTR = 66;
	/** RegularExpression Id. */
	int VERSION_ATTR = 67;
	/** RegularExpression Id. */
	int SIZE_ATTR = 68;
	/** RegularExpression Id. */
	int TYPE_ATTR = 69;
	/** RegularExpression Id. */
	int RAW_ATTR = 70;
	/** RegularExpression Id. */
	int RID_ID_ATTR = 71;
	/** RegularExpression Id. */
	int RID_POS_ATTR = 72;
	/** RegularExpression Id. */
	int FIELDS_ATTR = 73;
	/** RegularExpression Id. */
	int INTEGER_LITERAL = 74;
	/** RegularExpression Id. */
	int DECIMAL_LITERAL = 75;
	/** RegularExpression Id. */
	int HEX_LITERAL = 76;
	/** RegularExpression Id. */
	int OCTAL_LITERAL = 77;
	/** RegularExpression Id. */
	int FLOATING_POINT_LITERAL = 78;
	/** RegularExpression Id. */
	int DECIMAL_FLOATING_POINT_LITERAL = 79;
	/** RegularExpression Id. */
	int DECIMAL_EXPONENT = 80;
	/** RegularExpression Id. */
	int HEXADECIMAL_FLOATING_POINT_LITERAL = 81;
	/** RegularExpression Id. */
	int HEXADECIMAL_EXPONENT = 82;
	/** RegularExpression Id. */
	int CHARACTER_LITERAL = 83;
	/** RegularExpression Id. */
	int STRING_LITERAL = 84;
	/** RegularExpression Id. */
	int INTEGER_RANGE = 85;
	/** RegularExpression Id. */
	int TRUE = 86;
	/** RegularExpression Id. */
	int FALSE = 87;
	/** RegularExpression Id. */
	int LPAREN = 88;
	/** RegularExpression Id. */
	int RPAREN = 89;
	/** RegularExpression Id. */
	int LBRACE = 90;
	/** RegularExpression Id. */
	int RBRACE = 91;
	/** RegularExpression Id. */
	int LBRACKET = 92;
	/** RegularExpression Id. */
	int RBRACKET = 93;
	/** RegularExpression Id. */
	int SEMICOLON = 94;
	/** RegularExpression Id. */
	int COMMA = 95;
	/** RegularExpression Id. */
	int DOT = 96;
	/** RegularExpression Id. */
	int AT = 97;
	/** RegularExpression Id. */
	int DOLLAR = 98;
	/** RegularExpression Id. */
	int BACKTICK = 99;
	/** RegularExpression Id. */
	int EQ = 100;
	/** RegularExpression Id. */
	int EQEQ = 101;
	/** RegularExpression Id. */
	int LT = 102;
	/** RegularExpression Id. */
	int GT = 103;
	/** RegularExpression Id. */
	int BANG = 104;
	/** RegularExpression Id. */
	int TILDE = 105;
	/** RegularExpression Id. */
	int HOOK = 106;
	/** RegularExpression Id. */
	int COLON = 107;
	/** RegularExpression Id. */
	int LE = 108;
	/** RegularExpression Id. */
	int GE = 109;
	/** RegularExpression Id. */
	int NE = 110;
	/** RegularExpression Id. */
	int NEQ = 111;
	/** RegularExpression Id. */
	int SC_OR = 112;
	/** RegularExpression Id. */
	int SC_AND = 113;
	/** RegularExpression Id. */
	int INCR = 114;
	/** RegularExpression Id. */
	int DECR = 115;
	/** RegularExpression Id. */
	int PLUS = 116;
	/** RegularExpression Id. */
	int MINUS = 117;
	/** RegularExpression Id. */
	int STAR = 118;
	/** RegularExpression Id. */
	int SLASH = 119;
	/** RegularExpression Id. */
	int BIT_AND = 120;
	/** RegularExpression Id. */
	int BIT_OR = 121;
	/** RegularExpression Id. */
	int XOR = 122;
	/** RegularExpression Id. */
	int REM = 123;
	/** RegularExpression Id. */
	int LSHIFT = 124;
	/** RegularExpression Id. */
	int PLUSASSIGN = 125;
	/** RegularExpression Id. */
	int MINUSASSIGN = 126;
	/** RegularExpression Id. */
	int STARASSIGN = 127;
	/** RegularExpression Id. */
	int SLASHASSIGN = 128;
	/** RegularExpression Id. */
	int ANDASSIGN = 129;
	/** RegularExpression Id. */
	int ORASSIGN = 130;
	/** RegularExpression Id. */
	int XORASSIGN = 131;
	/** RegularExpression Id. */
	int REMASSIGN = 132;
	/** RegularExpression Id. */
	int LSHIFTASSIGN = 133;
	/** RegularExpression Id. */
	int RSIGNEDSHIFTASSIGN = 134;
	/** RegularExpression Id. */
	int RUNSIGNEDSHIFTASSIGN = 135;
	/** RegularExpression Id. */
	int ELLIPSIS = 136;
	/** RegularExpression Id. */
	int RANGE = 137;
	/** RegularExpression Id. */
	int NOT = 138;
	/** RegularExpression Id. */
	int IN = 139;
	/** RegularExpression Id. */
	int LIKE = 140;
	/** RegularExpression Id. */
	int IS = 141;
	/** RegularExpression Id. */
	int BETWEEN = 142;
	/** RegularExpression Id. */
	int CONTAINS = 143;
	/** RegularExpression Id. */
	int CONTAINSALL = 144;
	/** RegularExpression Id. */
	int CONTAINSKEY = 145;
	/** RegularExpression Id. */
	int CONTAINSVALUE = 146;
	/** RegularExpression Id. */
	int CONTAINSTEXT = 147;
	/** RegularExpression Id. */
	int MATCHES = 148;
	/** RegularExpression Id. */
	int KEY = 149;
	/** RegularExpression Id. */
	int INSTANCEOF = 150;
	/** RegularExpression Id. */
	int CLUSTER = 151;
	/** RegularExpression Id. */
	int IDENTIFIER = 152;
	/** RegularExpression Id. */
	int QUOTED_IDENTIFIER = 153;
	/** RegularExpression Id. */
	int INDEX_IDENTIFIER = 154;
	/** RegularExpression Id. */
	int INDEXVALUES_IDENTIFIER = 155;
	/** RegularExpression Id. */
	int INDEXVALUESASC_IDENTIFIER = 156;
	/** RegularExpression Id. */
	int INDEXVALUESDESC_IDENTIFIER = 157;
	/** RegularExpression Id. */
	int CLUSTER_IDENTIFIER = 158;
	/** RegularExpression Id. */
	int METADATA_IDENTIFIER = 159;
	/** RegularExpression Id. */
	int LETTER = 160;
	/** RegularExpression Id. */
	int PART_LETTER = 161;
	/** Lexical state. */
	int DEFAULT = 0;
	/** Literal token values. */
	String[] tokenImage = {"<EOF>", "\" \"", "\"\\t\"", "\"\\n\"", "\"\\r\"", "<SELECT>", "<TRAVERSE>", "<INSERT>", "<CREATE>", "<DELETE>", "<VERTEX>", "<EDGE>", "<UPDATE>", "<UPSERT>", "<FROM>", "<TO>", "<WHERE>", "<WHILE>", "<INTO>", "<VALUES>", "<SET>", "<ADD>", "<PUT>", "<MERGE>", "<CONTENT>", "<REMOVE>", "<INCREMENT>", "<AND>", "<OR>", "<NULL>", "<DEFINED>", "<ORDER>", "<GROUP>", "<BY>", "<LIMIT>", "<SKIP2>", "<BATCH>", "<OFFSET>", "<TIMEOUT>", "<ASC>", "<AS>", "<DESC>", "<FETCHPLAN>", "<RETURN>", "<BEFORE>", "<AFTER>", "<LOCK>", "<RECORD>", "<WAIT>", "<RETRY>", "<LET>", "<NOCACHE>", "<UNSAFE>", "<PARALLEL>", "<STRATEGY>", "<DEPTH_FIRST>", "<BREADTH_FIRST>", "<LUCENE>", "<NEAR>", "<WITHIN>", "<UNWIND>", "<MAXDEPTH>", "<EXCEPTION>", "<THIS>", "<RECORD_ATTRIBUTE>", "<RID_ATTR>", "<CLASS_ATTR>", "<VERSION_ATTR>", "<SIZE_ATTR>", "<TYPE_ATTR>", "<RAW_ATTR>", "<RID_ID_ATTR>", "<RID_POS_ATTR>", "<FIELDS_ATTR>", "<INTEGER_LITERAL>", "<DECIMAL_LITERAL>", "<HEX_LITERAL>", "<OCTAL_LITERAL>", "<FLOATING_POINT_LITERAL>", "<DECIMAL_FLOATING_POINT_LITERAL>", "<DECIMAL_EXPONENT>", "<HEXADECIMAL_FLOATING_POINT_LITERAL>", "<HEXADECIMAL_EXPONENT>", "<CHARACTER_LITERAL>", "<STRING_LITERAL>", "<INTEGER_RANGE>", "\"true\"", "\"false\"", "\"(\"", "\")\"", "\"{\"", "\"}\"", "\"[\"", "\"]\"", "\";\"", "\",\"", "\".\"", "\"@\"", "\"$\"", "\"`\"", "\"=\"", "\"==\"", "\"<\"", "\">\"", "\"!\"", "\"~\"", "\"?\"", "\":\"", "\"<=\"", "\">=\"", "\"!=\"", "\"<>\"", "\"||\"", "\"&&\"", "\"++\"", "\"--\"", "\"+\"", "\"-\"", "\"*\"", "\"/\"", "\"&\"", "\"|\"", "\"^\"", "\"%\"", "\"<<\"", "\"+=\"", "\"-=\"", "\"*=\"", "\"/=\"", "\"&=\"", "\"|=\"", "\"^=\"", "\"%=\"", "\"<<=\"", "\">>=\"", "\">>>=\"", "\"...\"", "\"..\"", "<NOT>", "<IN>", "<LIKE>", "<IS>", "<BETWEEN>", "<CONTAINS>", "<CONTAINSALL>", "<CONTAINSKEY>", "<CONTAINSVALUE>", "<CONTAINSTEXT>", "<MATCHES>", "<KEY>", "<INSTANCEOF>", "<CLUSTER>", "<IDENTIFIER>", "<QUOTED_IDENTIFIER>", "<INDEX_IDENTIFIER>", "<INDEXVALUES_IDENTIFIER>", "<INDEXVALUESASC_IDENTIFIER>", "<INDEXVALUESDESC_IDENTIFIER>", "<CLUSTER_IDENTIFIER>", "<METADATA_IDENTIFIER>", "<LETTER>", "<PART_LETTER>", "\"#\"",};
}
